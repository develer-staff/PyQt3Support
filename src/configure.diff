--- configure.py
+++ configure.py
@@ -377,6 +377,8 @@
         check_module("QtXmlPatterns", "qxmlname.h", "new QXmlName()")
         check_module("phonon", "phonon/videowidget.h",
                 "new Phonon::VideoWidget()")
+        check_module("Qt3Support", "Qt3Support/q3painter.h", "new Q3Painter()",
+                extra_libs=["QtGui"])
         check_module("QtAssistant", "qassistantclient.h",
                 "new QAssistantClient(\"foo\")", extra_lib_dirs=ass_lib_dirs,
                 extra_libs=ass_libs)
@@ -547,6 +549,9 @@
         if "QAxContainer" in pyqt_modules:
             generate_code("QAxContainer")
 
+        if "Qt3Support" in pyqt_modules:
+            generate_code("Qt3Support")
+
         # Generate the composite module.
         qtmod_sipdir = os.path.join("sip", "Qt")
         mk_clean_dir(qtmod_sipdir)
@@ -1434,12 +1439,19 @@
     if len(opts.enabled) > 0 and mname not in opts.enabled:
         return
 
+    all_modules = len(opts.enabled) == 0
+    sipconfig_message = sipconfig.inform if all_modules else sipconfig.error
+
     # Check the module's main .sip file exists.
     if os.access(os.path.join(src_dir, "sip", mname, mname + "mod.sip"), os.F_OK):
         sipconfig.inform("Checking to see if the %s module should be built..." % mname)
 
         if check_api(incfile, test, mname, extra_include_dirs=extra_include_dirs, extra_lib_dirs=extra_lib_dirs, extra_libs=extra_libs):
             pyqt_modules.append(mname)
+        else:
+            sipconfig_message("The requested module %s can't be built" % mname)
+    else:
+        sipconfig_message("Main module sip file missing for module %s" % mname)
 
 
 def check_api(incfile, test, mname, extra_include_dirs=None, extra_lib_dirs=None, extra_libs=None):
@@ -1524,6 +1536,11 @@
     # yet so we make sure we avoid the problem by always releasing the GIL.
     qt_sip_flags.append("-g")
 
+    # If the module is disabled, disable also the feature, so that qt3 support
+    # functions in other modules are compiled out.
+    if "Qt3Support" not in pyqt_modules:
+        qt_sip_flags.append("-x")
+        qt_sip_flags.append("Qt_QT3SUPPORT")
 
 def needed_qt_libs(mname, qt_libs):
     """Add any additional Qt libraries needed by a module to an existing list.
@@ -1555,6 +1572,7 @@
         "phonon": ["QtGui"],
         "QtAssistant": ["QtNetwork", "QtGui"],
         "QtDesigner": ["QtGui"],
+        "Qt3Support": ["QtNetwork", "QtSql", "QtXml"],
         "QAxContainer": ["QtGui"]
     }
 
@@ -1726,6 +1744,10 @@
 
     add_makefile_extras(makefile, extra_include_dirs, extra_lib_dirs, extra_libs)
 
+    if "Qt3Support" in pyqt_modules:
+        sipconfig.inform("QT3_SUPPORT defined for the %s module." % mname)
+        makefile.extra_defines.append("QT3_SUPPORT")
+
     makefile.generate()
 
 
